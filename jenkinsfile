def flag = false;
pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                sh 'echo passed'
                git branch: 'main', url: 'https://github.com/Sagar2366/LearnWithSagarBatch2.git'
                mail bcc: '', body: "<b>PIPELINE STATUS</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "getfitwithsagar2366@gmail.com";  
            }
        }
        stage('Build and Test') {
            steps {
            sh 'ls -ltr'
        }
        }
        stage('Verify Python installation') {
            steps {
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh "docker --version"
                    
                }
            }
        }
        stage('Install Python') {
            steps {
             build job: 'Python/PythonInstall'
            }
        }
        stage('Install dependencies') {
            steps {
             sh 'pip3 install -r projects/python-mongo-todo/local/requirements.txt'
            }
        }
        
    }
         post {  
         always {  
             echo 'This will always run'  
             mail bcc: '', body: "<b>PIPELINE STATUS</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "PIPELINE STATUS CI: Project name -> ${env.JOB_NAME}", to: "getfitwithsagar2366@gmail.com";  

         }  
         success {  
             echo 'This will run only if successful'  
         }  
         failure {  
             mail bcc: '', body: "<b>PIPELINE STATUS</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "getfitwithsagar2366@gmail.com";  
         }  
         unstable {  
             echo 'This will run only if the run was marked as unstable'  
         }  
         changed {  
             echo 'This will run only if the state of the Pipeline has changed'  
             echo 'For example, if the Pipeline was previously failing but is now successful'  
         }  
     }  
}
